name: Build and Tag

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Install Development Packages
        run: |
          # Linting
          pip install black isort noprint pylint
          # Testing
          pip install mock pytest pytest-sugar pytest-xdist pytest-asyncio pytest-timeout coverage[toml]
      - name: Lint
        run: |
          isort -c .
          black --check .
          pylint staging tests
          noprint -ve staging tests
      - name: Test
        run: |
          coverage run -m pytest -xv tests
          coverage report -m --fail-under=30
          coverage erase
  tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
      
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Get Tag from Cyclic-Classes
        id: version
        run: |
          pip install check-bump
          currv=$(check-bump) && echo "version=v$currv" >> "$GITHUB_OUTPUT"
          exitcode="$?"
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
      - name: Push Tag
        uses: actions/github-script@v7
        if: steps.version.outputs.exitcode == '0'
        with:
          github-token: ${{ secrets.GH_ACTIONS_TOKEN }}  # PAT Token that has repo and hooks permissions (403 or 404 HTTP errors otherwise)
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.version.outputs.version }}",
              sha: context.sha
            })
